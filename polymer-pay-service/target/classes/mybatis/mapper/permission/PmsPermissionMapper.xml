<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyzf.polymer.pay.permission.dao.impl.PmsPermissionDaoImpl">

	<sql id="pms_permission"> PMS_PERMISSION </sql>

	<resultMap id="beanMap"
		type="com.zyzf.polymer.pay.permission.entity.PmsPermission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="ver" property="ver" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="editor" property="editor" jdbcType="VARCHAR" />
		<result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="permission_name" property="permissionName"
			jdbcType="VARCHAR" />
		<result column="permission" property="permission" jdbcType="VARCHAR" />
	</resultMap>

	<!-- <insert id="insert" parameterType="com.zyzf.polymer.pay.permission.entity.PmsPermission" 
		keyProperty="id" useGeneratedKeys="true"> insert into <include refid="pms_permission" 
		/> (id,ver,status,creater,create_time, editor, edit_time, remark, permission_name,permission) 
		values (#{id},0,#{status}, #{creater},#{createTime}, #{editor},#{editTime},#{remark},#{permissionName}, 
		#{permission}) </insert> -->
	<insert id="insert" parameterType="com.zyzf.polymer.pay.permission.entity.PmsPermission"
		keyProperty="id" useGeneratedKeys="true">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
			SELECT SQC_PMS_PERMISSION.NEXTVAL AS ID FROM DUAL
		</selectKey>
		insert into PMS_PERMISSION (ID, VER, CREATER,
		CREATE_TIME, EDITOR, EDIT_TIME,
		STATUS, REMARK, PERMISSION_NAME,
		PERMISSION)
		values (#{id,jdbcType=DECIMAL}, #{ver,jdbcType=DECIMAL},
		#{creater,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{editor,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{permissionName,jdbcType=VARCHAR},
		#{permission,jdbcType=VARCHAR})
	</insert>
	<!-- <update id="update" parameterType="com.zyzf.polymer.pay.permission.entity.PmsPermission"> 
		update <include refid="pms_permission" /> <set> ver = #{ver}+1, creater = 
		#{creater,jdbcType=VARCHAR}, create_time = #{createTime,jdbcType=TIMESTAMP}, 
		editor = #{editor,jdbcType=VARCHAR}, edit_time = #{editTime,jdbcType=TIMESTAMP}, 
		remark = #{remark,jdbcType=VARCHAR}, permission_name = #{permissionName,jdbcType=VARCHAR}, 
		permission = #{permission,jdbcType=VARCHAR} </set> <where> id = #{id} and 
		ver = #{ver} </where> </update> -->
	<update id="updateByPrimaryKeySelective" parameterType="com.zyzf.polymer.pay.permission.entity.PmsPermission">
		update PMS_PERMISSION
		<set>
			<if test="ver != null">
				VER = #{ver,jdbcType=DECIMAL},
			</if>
			<if test="creater != null">
				CREATER = #{creater,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="editor != null">
				EDITOR = #{editor,jdbcType=VARCHAR},
			</if>
			<if test="editTime != null">
				EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="permissionName != null">
				PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
			</if>
			<if test="permission != null">
				PERMISSION = #{permission,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL} 
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zyzf.polymer.pay.permission.entity.PmsPermission">
		update PMS_PERMISSION
		set VER = #{ver,jdbcType=DECIMAL}+1,
		CREATER = #{creater,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		EDITOR = #{editor,jdbcType=VARCHAR},
		EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
		STATUS = #{status,jdbcType=VARCHAR},
		REMARK = #{remark,jdbcType=VARCHAR},
		PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
		PERMISSION = #{permission,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=DECIMAL} and 
		ver = #{ver,jdbcType=DECIMAL}
	</update>
	<select id="findByIds" resultMap="beanMap">
		select
		id,ver,status,create_time, editor, edit_time, remark,
		permission_name,permission
		from
		<include refid="pms_permission" />
		where ID in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">#{item}</foreach>
	</select>

	<select id="getByPermissionName" parameterType="string"
		resultMap="beanMap">
		select
		id,ver,status,create_time, editor, edit_time, remark,
		permission_name,permission
		from
		<include refid="pms_permission" />
		where permission_name = #{permissionName}
	</select>

	<select id="getByPermission" parameterType="string" resultMap="beanMap">
		select
		id,ver,status,create_time, editor, edit_time, remark,
		permission_name,permission
		from
		<include refid="pms_permission" />
		where permission = #{permission}
	</select>

	<select id="getByPermissionNameNotEqId" parameterType="java.util.Map"
		resultMap="beanMap">
		select
		id,ver,status,create_time, editor, edit_time, remark,
		permission_name,permission
		from
		<include refid="pms_permission" />
		where permission_name = #{permissionName} and id != #{id}
	</select>

	<select id="getByPermissionNotEqId" parameterType="java.util.Map"
		resultMap="beanMap">
		select
		id,ver,status,create_time, editor, edit_time, remark,
		permission_name,permission
		from
		<include refid="pms_permission" />
		where permission = #{permission} and id != #{id}
	</select>

	<select id="selectByPrimaryKey" parameterType="Long" resultMap="beanMap">
		select
		*
		from
		<include refid="pms_permission" />
		where id = #{id}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from
		<include refid="pms_permission" />
		where id = #{id}
	</delete>


	<!-- 动态组装复合查询条件 -->
	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="permission != null and permission != ''"> and permission= #{permission}</if>
		<!-- Like query -->
		<if test="permissionName != null and permissionName != ''"> and permission_Name like CONCAT(CONCAT('%',
			#{permissionName}), '%')</if>
	</sql>

	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="pms_permission" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by create_time desc
	</select>

	<!-- 分页查询时要用到的总数统计 -->
	<select id="listPageCount" parameterType="java.util.Map"
		resultType="long">
		select count(*) from
		<include refid="pms_permission" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="listBy" parameterType="java.util.Map" resultMap="beanMap">
		select
		*
		from
		<include refid="pms_permission" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

</mapper>