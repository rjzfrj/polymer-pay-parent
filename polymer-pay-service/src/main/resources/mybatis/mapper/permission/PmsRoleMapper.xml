<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyzf.polymer.pay.permission.dao.impl.PmsRoleDaoImpl">

	<!-- Pms权限管理：角色表 -->
	<sql id="pms_role"> PMS_ROLE </sql>
	<sql id="pms_role_permission"> PMS_ROLE_PERMISSION </sql>

	<resultMap id="beanMap" type="com.zyzf.polymer.pay.permission.entity.PmsRole">

		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="ver" property="ver" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="editor" property="editor" jdbcType="VARCHAR" />
		<result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
	</resultMap>

<!-- 	<insert id="insert" parameterType="com.zyzf.polymer.pay.permission.entity.PmsRole" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="pms_role" />

		(id,ver,status,creater,create_time, editor, edit_time, remark, role_code, role_name)
		values
		(#{id},0,#{status},#{creater}, #{createTime}, #{editor},#{editTime},#{remark},#{roleCode},#{roleName})
	</insert> -->
	<insert id="insert" parameterType="com.zyzf.polymer.pay.permission.entity.PmsRole" keyProperty="id" useGeneratedKeys="true">
	<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
		SELECT SQC_PMS_ROLE.NEXTVAL AS ID FROM DUAL
	</selectKey>
    insert into PMS_ROLE (ID, VER, CREATER, 
      CREATE_TIME, EDITOR, EDIT_TIME, 
      STATUS, REMARK, ROLE_CODE, 
      ROLE_NAME)
    values (#{id,jdbcType=DECIMAL}, #{ver,jdbcType=DECIMAL}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{editor,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleName,jdbcType=VARCHAR})
  	</insert>
<!-- 	<update id="update" parameterType="com.zyzf.polymer.pay.permission.entity.PmsRole">
		update
		<include refid="pms_role" />
		<set>

			ver = #{ver}+1,
			creater = #{creater,jdbcType=VARCHAR},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			editor = #{editor,jdbcType=VARCHAR},
			edit_time = #{editTime,jdbcType=TIMESTAMP},
			remark = #{remark,jdbcType=VARCHAR},
			role_code = #{roleCode ,jdbcType=VARCHAR},
			role_name = #{roleName,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR }
		</set>
		<where>
			id = #{id} and ver = #{ver}
		</where>
	</update> -->
	<update id="updateByPrimaryKeySelective" parameterType="com.zyzf.polymer.pay.permission.entity.PmsRole">
    update PMS_ROLE
    <set>
      <if test="ver != null">
        VER = #{ver,jdbcType=DECIMAL},
      </if>
      <if test="creater != null">
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null">
        EDITOR = #{editor,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyzf.polymer.pay.permission.entity.PmsRole">
    update PMS_ROLE
    set VER = #{ver,jdbcType=DECIMAL}+1,
      CREATER = #{creater,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      EDITOR = #{editor,jdbcType=VARCHAR},
      EDIT_TIME = #{editTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL} and #{ver,jdbcType=DECIMAL}
  </update>
	<select id="selectByPrimaryKey" parameterType="Long" resultMap="beanMap">
		select * from
		<include refid="pms_role" />
		where id = #{id}
	</select>

	<select id="getByRoleNameOrRoleCode" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="pms_role" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="findByRoleNameNotEqId" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="pms_role" />
		where id != #{id} and role_name = #{roleName}
	</select>

	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="pms_role" />
		order by id
	</select>

	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from
		<include refid="pms_role" />
		where id = #{id}
	</delete>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="roleCode != null and roleCode != ''"> and role_code = #{roleCode}</if>
		<!-- Like query -->
		<if test="roleName != null and roleName != ''"> and role_name like CONCAT(CONCAT('%', #{roleName}), '%')</if>
	</sql>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="pms_role" />
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id desc]]>
	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="pms_role" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="listByPermissionId" parameterType="Long" resultMap="beanMap">
		select R.* from
		<include refid="pms_role" />
		R
		LEFT JOIN
		<include refid="pms_role_permission" />
		RA
		ON R.id = RA.role_id where RA.permission_id = #{permissionId}
		order by R.id ASC
	</select>


</mapper>